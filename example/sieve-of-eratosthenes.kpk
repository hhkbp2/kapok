(ns sieve-of-eratosthenes
  (require lists
           (kapok (io))))

(defn- sieve [[] primes]
  (lists.reverse primes))

(defn- sieve [[h & t] primes]
  (sieve (lists.filter (fn [x]
                         (!= (rem x h) 0))
                       t)
         [h & primes]))

(defn sieve [v]
  (sieve (lists.seq 2 v) []))

(defn main []
  (let [v 1000]
    (io.format #"run sieve(~B) return: ~p~n" v (sieve v))))
