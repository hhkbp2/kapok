(ns macro-test.inner
  "A namespace for testing macro privacy."
  (use kapok.kunit))

(defmacro j []
  'x)

(defmacro- k []
  'x)

(defn main []
  (test "test local macro call"
    (let [x 2]
      (assert (=== (k) ;; `(k)' evaluates to `x'
                   2)))))

(ns macro-test
  "A namespace for testing macro primitives."
  (use kapok.kunit)
  (use macro-test.inner))

(defn p [a]
  (inc a))

(defmacro f [fun &rest args]
  `(~fun ~@args))

(defmacro g [a &rest list]
  `[~a ~@list])

(defn main []

  (test "test remote macro call"
    (let [x 1]
      (assert (=== (j) ;; `(j)' evaluates to `x'
                   1))))

  (test "test macro primitives"
    (assert (=== (f p 1)
                 2))
    (assert (=== (g 1 2)
                 [1 2])))
  )
