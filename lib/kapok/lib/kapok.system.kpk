(ns kapok.system
  """The system module provides access to variables used or
  maintained by the VM and to functions that interact directly
  with the VM or the host system.
  """

  (require erlang
           file
           os)
  (use (kapok (io))))

(defn cwd []
  """Current working directory.

  Returns the current working directory or `:nil` if one
  is not available.
  """
  (case (file.get_cwd)
    ({#ok base}
     (io.chardata-to-string (fix-drive-letter base)))
    (_ :nil)))

(defn- fix-drive-letter [[l \: \/ & rest] &as original] (&when (&and (>= l \A)
                                                                     (<= l \Z)))
  (case (os.type)
    ({#win32 _}
     [(- (+ l \a) \A) \: \/ & rest])
    (_
     original)))

(defn- fix-drive-letter [original]
  original)

(defn cwd! []
  """Current working directory, exception on error.

  Returns the current working directory or raises error.
  """
  (or (cwd)
      ;; TODO revise to use exception
      (throw "could not get a current working directory")))

(defn stacktrace []
  """Last exception stacktrace.

  Note that the Erlang VM (and therefore this function) does not
  return the current stacktrace but rather the stacktrace of the
  latest exception.

  Inlined by the compiler into `(erlang.get_stacktrace 0)`.
  """

  (erlang.get_stacktrace))
